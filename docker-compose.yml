services:

  api:
    image: fastapi
    container_name: ml_api
    build:
      context: ./api
      dockerfile: Dockerfile
      target: build
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    networks:
      - shared_network

  model:
    build:
      context: ./model
      dockerfile: Dockerfile
    depends_on:
      - redis
      - db
    volumes:
      - ./data:/app/data  # Mount data directory for datasets
    networks:
      - shared_network

  ui:
    image: webserver
    container_name: web
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    networks:
      - shared_network

  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "8080:80"  # Expose port 80 for HTTP
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf  # Mount your Nginx configuration file
  #   depends_on:
  #     - ui  # Ensure the UI service is started before Nginx
  #   networks:
  #     - shared_network

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - shared_network

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - shared_network

networks:
  shared_network:
    external: true

volumes:
  postgres_data: